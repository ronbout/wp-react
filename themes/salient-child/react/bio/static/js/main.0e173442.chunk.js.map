{"version":3,"sources":["styledComponents/Paper.js","assets/js/library.js","components/CandidateBioContainer/CandidateBio.js","components/CandidateProfile/dummyData.js","assets/js/dataFetch.js","components/CandidateBioContainer/CandidateBioContainer.js","components/CandidateBioContainer/index.js","App.js","serviceWorker.js","index.js"],"names":["Paper","convertNullsToEmpty","obj","Array","isArray","map","val","Object","keys","forEach","key","createDate","dateStr","Date","displayJob","job","Fragment","id","className","jobTitle","company","city","municipality","state","region","country","countryCode","name","buildJobLoc","startDate","ret","endMonth","start","startMonth","Intl","DateTimeFormat","month","format","getFullYear","endDate","end","getYear","buildJobDates","highlights","jh","highlight","skills","reduce","str","skill","buildJobEnvironment","dispCandEds","eds","ed","degreeName","schoolName","displayEducation","CandidateBio","candidate","techtagSkills","layout","sections","s","c","person","formattedName","experience","certifications","cert","src","window","imgLoc","certificateImage","height","width","alt","candidateHighlights","h","techSkills","tskill","join","ex","education","length","certs","candidateInfo","givenName","middleName","familyName","affix","email1","email2","mobilePhone","workPhone","addressLine1","addressLine2","postalCode","website","objective","executiveSummary","socialMedia","socialType","socialLink","API_QUERY","dataFetch","endpoint","a","async","queryStr","httpMethod","body","formData","urlBase","apiUrl","basicUrl","headers","httpConfig","method","JSON","stringify","fetch","response","json","result","error","data","console","log","API_CANDIDATES","API_CANDIDATE_SKILLS","defaultLayout","CandidateBioContainer","props","loadCandidateInfo","candId","candidateApiInfo","setState","buildTechSkils","candidateSkillInfo","techArray","resumeTechtagId","tagId","resumeTechtagName","push","skillName","loadCandidateSkills","tsdData","urlParams","URLSearchParams","location","search","get","parse","this","Component","library","add","faQuestion","faSearch","faArrowUp","faArrowDown","faChevronDown","faEdit","faPlus","faCheck","fab","faArrowsAltV","faCogs","resumeUrl","App","Boolean","hostname","match","target","document","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0e173442.chunk.js","sourcesContent":["import { Paper } from \"react-md\";\r\n\r\nexport default Paper;\r\n","/**\r\n * library.js\r\n * useful js functions\r\n * ex.  email validation routine\r\n *\r\n */\r\n\r\n/**\r\n * This function is used to add CR/LF to a title\r\n * attribue for an easy hover tooltip\r\n * 'title' does not accept html, so this is one\r\n * way around that\r\n * most common use case: convertHtmlToText(\"&#013;&#010;\")\r\n */\r\nexport const convertHtmlToText = value => {\r\n\tlet d = document.createElement(\"div\");\r\n\td.innerHTML = value;\r\n\td.id = \"tmp-div\";\r\n\tlet retVal = d.innerText;\r\n\tdocument.body.appendChild(d);\r\n\tlet tmp = document.getElementById(\"tmp-div\");\r\n\ttmp.parentNode.removeChild(tmp);\r\n\treturn retVal;\r\n};\r\n\r\nexport function isEmail(email) {\r\n\t// returns true or false if email is correctly formatted\r\n\r\n\t// test length\r\n\tif (email.length < 6) return false;\r\n\r\n\t// test for @ character\r\n\tif (email.indexOf(\"@\") < 1) return false;\r\n\r\n\t// split at the @, making sure it is only 2\r\n\t// then test each part\r\n\tlet emailArray = email.split(\"@\");\r\n\tif (emailArray.length !== 2) return false;\r\n\tlet local = emailArray[0];\r\n\tlet domain = emailArray[1];\r\n\r\n\t// test for invalid characters\r\n\tlet regex = /^[a-zA-Z0-9!#$%&'*+/=?^_`{|}~.-]+$/;\r\n\tif (!local.match(regex)) return false;\r\n\r\n\t// test for periods in a row in domain\r\n\tregex = /\\.{2,}/;\r\n\tif (domain.match(regex)) return false;\r\n\r\n\t// test for leading and trailing whitespace and periods\r\n\tif (\r\n\t\tdomain.trim() !== domain ||\r\n\t\tdomain.startsWith(\".\") ||\r\n\t\tdomain.endsWith(\".\")\r\n\t)\r\n\t\treturn false;\r\n\r\n\t// split the domain at the periods, making sure at least 2\r\n\tlet domainSubs = domain.split(\".\");\r\n\tif (domainSubs.length < 2) return false;\r\n\t// make sure both\r\n\r\n\t// loop through each sub and perform test for invalid chars\r\n\t// and leading/trailing whitespace and hyphens\r\n\tdomainSubs.forEach(sub => {\r\n\t\tif (sub.trim() !== sub || sub.startsWith(\"-\") || sub.endsWith(\"-\"))\r\n\t\t\treturn false;\r\n\t\tlet regex = /^[a-z0-9-]+$/i;\r\n\t\tif (!sub.match(regex)) return false;\r\n\t});\r\n\r\n\t// Email passed!\r\n\treturn true;\r\n}\r\n\r\nexport const objCopy = obj => JSON.parse(JSON.stringify(obj));\r\n\r\nexport const deepCompare = (obj1, obj2) => {\r\n\treturn JSON.stringify(obj1) === JSON.stringify(obj2);\r\n};\r\n\r\nexport function convertNullsToEmpty(obj) {\r\n\t// obj could be array, object or as single value\r\n\t// use recursion to get to the single value and\r\n\t// replace any nulls with an empty space.\r\n\t// this is for setting state for forms\r\n\tif (Array.isArray(obj)) {\r\n\t\t// loop through array and call this function on each elementFromPoint\r\n\t\treturn obj.map(val => convertNullsToEmpty(val));\r\n\t}\r\n\tif (obj !== null && typeof obj === \"object\") {\r\n\t\t// since we have already handled arrays, must be actual object\r\n\t\tObject.keys(obj).forEach(key => (obj[key] = convertNullsToEmpty(obj[key])));\r\n\t\treturn obj;\r\n\t}\r\n\t// to be here, we have a scalar\r\n\treturn obj !== null ? obj : \"\";\r\n}\r\n\r\nexport function getDateStr(date) {\r\n\t// takes a javascript Date object and converts\r\n\t// into yyyy-MM-dd stringify\r\n\r\n\tif (isNaN(Date.parse(date))) {\r\n\t\treturn \"Invalid Date\";\r\n\t}\r\n\treturn `${date.getFullYear()}-${(date.getMonth() + 1)\r\n\t\t.toString()\r\n\t\t.padStart(2, \"0\")}-${date\r\n\t\t.getDate()\r\n\t\t.toString()\r\n\t\t.padStart(2, \"0\")}`;\r\n}\r\n\r\nexport function createDate(dateStr) {\r\n\treturn new Date(dateStr + \"T12:00:00\");\r\n}\r\n\r\nexport function isEmptyObject(obj) {\r\n\treturn Object.keys(obj).length === 0;\r\n}\r\n","/* CandidateBio.js */\r\nimport React from \"react\";\r\nimport Paper from \"styledComponents/Paper\";\r\nimport { createDate } from \"assets/js/library.js\";\r\n\r\n// const dispHorLine = (style = { backgroundColor: \"#999\" }) => {\r\n// \treturn (\r\n// \t\t<div className=\"tsd-hdiv\" style={{ ...style }}>\r\n// \t\t\t{\" \"}\r\n// \t\t</div>\r\n// \t);\r\n// };\r\n\r\nconst dispCandHeader = c => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className=\"red-bar\"></div>\r\n\t\t\t<div className=\"grey-bar\"></div>\r\n\t\t\t<div id=\"resume-header-container\">\r\n\t\t\t\t<span id=\"resume-header\">\r\n\t\t\t\t\t<span id=\"header-name\">{c.person.formattedName}</span>\r\n\t\t\t\t\t<span id=\"header-title\">\r\n\t\t\t\t\t\t{c.jobTitle ? c.jobTitle : c.experience[0].jobTitle}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t{c.certifications.map(cert => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tkey={cert.name}\r\n\t\t\t\t\t\t\t\tsrc={`${window.imgLoc}certs/${cert.certificateImage}`}\r\n\t\t\t\t\t\t\t\theight={70}\r\n\t\t\t\t\t\t\t\twidth={70}\r\n\t\t\t\t\t\t\t\talt={cert.name}\r\n\t\t\t\t\t\t\t\tclassName=\"cert-img\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst dispCandHighlights = highlights => {\r\n\treturn (\r\n\t\t<div className=\"md-grid\" id=\"pro-summary-container\">\r\n\t\t\t<div className=\"md-cell--2 left-title\">\r\n\t\t\t\tProfessional\r\n\t\t\t\t<br />\r\n\t\t\t\tSummary\r\n\t\t\t</div>\r\n\t\t\t<div className=\"md-cell--9\">\r\n\t\t\t\t<ul className=\"highlight-list\">\r\n\t\t\t\t\t{highlights.map(h => {\r\n\t\t\t\t\t\treturn <li key={h.id}>{h.highlight}</li>;\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst dispTechSkills = techSkills => {\r\n\treturn (\r\n\t\t<div className=\"md-grid\" id=\"tech-skills-container\">\r\n\t\t\t<div className=\"md-cell--2 left-title\">\r\n\t\t\t\tTechnical\r\n\t\t\t\t<br />\r\n\t\t\t\tSkills\r\n\t\t\t</div>\r\n\t\t\t<div className=\"md-cell--9 tech-skills-container\">\r\n\t\t\t\t<table className=\"table table-bordered\">\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{Object.keys(techSkills).map(tskill => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr key={tskill}>\r\n\t\t\t\t\t\t\t\t\t<td>{techSkills[tskill].name}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{techSkills[tskill].skills.join(\", \")}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst buildJobLoc = company => {\r\n\tconst city = company.municipality ? \", \" + company.municipality : \"\";\r\n\tconst state = company.region ? \", \" + company.region : \"\";\r\n\tconst country = company.countryCode ? \", \" + company.countryCode : \"\";\r\n\treturn company.name + city + state + country;\r\n};\r\n\r\nconst buildJobDates = job => {\r\n\tlet ret = \"\",\r\n\t\tendMonth = \"\";\r\n\tif (job.startDate) {\r\n\t\tconst start = createDate(job.startDate);\r\n\t\tconst startMonth =\r\n\t\t\tnew Intl.DateTimeFormat(\"en-US\", { month: \"short\" }).format(start) +\r\n\t\t\t\"/\" +\r\n\t\t\tstart.getFullYear();\r\n\r\n\t\tif (job.endDate) {\r\n\t\t\tconst end = createDate(job.endDate);\r\n\t\t\tendMonth =\r\n\t\t\t\tnew Intl.DateTimeFormat(\"en-US\", { month: \"short\" }).format(end) +\r\n\t\t\t\tend.getYear();\r\n\t\t} else {\r\n\t\t\tendMonth = \"Present\";\r\n\t\t}\r\n\t\tret = startMonth + \" - \" + endMonth;\r\n\t}\r\n\treturn ret;\r\n};\r\n\r\nconst buildJobEnvironment = job => {\r\n\treturn job.skills.reduce((str, skill) => {\r\n\t\tstr = str ? skill.name : str + \", \" + skill.name;\r\n\t\treturn str;\r\n\t}, \"\");\r\n};\r\n\r\nconst displayJob = job => {\r\n\treturn (\r\n\t\t<React.Fragment key={job.id}>\r\n\t\t\t<div className=\"job-title\">{job.jobTitle}</div>\r\n\t\t\t<div className=\"job-location-dates\">\r\n\t\t\t\t<span className=\"job-location\">{buildJobLoc(job.company)}</span>\r\n\t\t\t\t{job.startDate && (\r\n\t\t\t\t\t<span className=\"job-dates\">{buildJobDates(job)}</span>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"job-highlight-title\">\r\n\t\t\t\tResponsibilities &amp; Achievements\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<ul className=\"highlight-list\">\r\n\t\t\t\t\t{job.highlights.map(jh => {\r\n\t\t\t\t\t\treturn <li key={jh.id}>{jh.highlight}</li>;\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row job-environment-container\">\r\n\t\t\t\t<div className=\"col-md-1 job-environment-title\">Environment:</div>\r\n\t\t\t\t<div className=\"col-md-11 environment-list\">\r\n\t\t\t\t\t{buildJobEnvironment(job)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst dispCandExp = ex => {\r\n\treturn (\r\n\t\t<div className=\"md-grid\" id=\"experience-container\">\r\n\t\t\t<div className=\"md-cell--2 left-title\">Experience</div>\r\n\t\t\t<div className=\"md-cell--9\" id=\"job-list\">\r\n\t\t\t\t{ex.map(job => {\r\n\t\t\t\t\treturn displayJob(job);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst displayEducation = ed => {\r\n\treturn (\r\n\t\t<React.Fragment key={ed.id}>\r\n\t\t\t<div className=\"ed-title\">{ed.degreeName}</div>\r\n\t\t\t{ed.schoolName && <div className=\"ed-school\">{ed.schoolName}</div>}\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nconst dispCandEds = eds => {\r\n\treturn (\r\n\t\t<div className=\"md-grid\" id=\"education-container\">\r\n\t\t\t<div className=\"md-cell--2 left-title\">\r\n\t\t\t\tEducation\r\n\t\t\t\t<br />\r\n\t\t\t\t&amp; Training\r\n\t\t\t</div>\r\n\t\t\t<div className=\"md-cell--9\" id=\"education-list\">\r\n\t\t\t\t{eds.map(ed => {\r\n\t\t\t\t\treturn displayEducation(ed);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst dispCandCerts = certs => {\r\n\treturn (\r\n\t\t<div className=\"md-grid\" id=\"certification-container\">\r\n\t\t\t<div className=\"md-cell--2 left-title\">Certifications</div>\r\n\t\t\t<div className=\"md-cell--9\" id=\"certifications-list\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{certs.map(cert => {\r\n\t\t\t\t\t\treturn <li key={cert.id}>{cert.name}</li>;\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst CandidateBio = ({ candidate, techtagSkills, layout }) => {\r\n\tconst buildResume = () => {\r\n\t\treturn layout.sections.map(s => {\r\n\t\t\tswitch (s.name) {\r\n\t\t\t\tcase \"hd\":\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<React.Fragment key={s.name}>\r\n\t\t\t\t\t\t\t{dispCandHeader(candidate)}\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t);\r\n\t\t\t\tcase \"hi\":\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<React.Fragment key={s.name}>\r\n\t\t\t\t\t\t\t{// candidate highlights\r\n\t\t\t\t\t\t\tdispCandHighlights(candidate.candidateHighlights)}\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t);\r\n\t\t\t\tcase \"ts\":\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<React.Fragment key={s.name}>\r\n\t\t\t\t\t\t\t{// technical skills\r\n\t\t\t\t\t\t\tdispTechSkills(techtagSkills)}\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t);\r\n\t\t\t\tcase \"ex\":\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<React.Fragment key={s.name}>\r\n\t\t\t\t\t\t\t{// Experience\r\n\t\t\t\t\t\t\tdispCandExp(candidate.experience)}\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t);\r\n\t\t\t\tcase \"ed\":\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<React.Fragment key={s.name}>\r\n\t\t\t\t\t\t\t{// Education & Training\r\n\t\t\t\t\t\t\tcandidate.education.length > 0 &&\r\n\t\t\t\t\t\t\t\tdispCandEds(candidate.education)}\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t);\r\n\t\t\t\tcase \"ct\":\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<React.Fragment key={s.name}>\r\n\t\t\t\t\t\t\t{// Certifications\r\n\t\t\t\t\t\t\tcandidate.certifications.length > 0 &&\r\n\t\t\t\t\t\t\t\tdispCandCerts(candidate.certifications)}\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t);\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn <div></div>;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\treturn <Paper className=\"full-resume\">{candidate.id && buildResume()}</Paper>;\r\n};\r\n\r\nexport default CandidateBio;\r\n","// dummy data\r\nexport const candidateInfo = {\r\n  id: \"\",\r\n  person: {\r\n    id: \"\",\r\n    formattedName: \"\",\r\n    givenName: \"\",\r\n    middleName: \"\",\r\n    familyName: \"\",\r\n    affix: \"\",\r\n    email1: \"\",\r\n    email2: \"\",\r\n    mobilePhone: \"\",\r\n    workPhone: \"\",\r\n    addressLine1: \"\",\r\n    addressLine2: \"\",\r\n    municipality: \"\",\r\n    region: \"\",\r\n    postalCode: \"\",\r\n    countryCode: \"\",\r\n    website: \"\"\r\n  },\r\n  objective: \"\",\r\n  executiveSummary: \"\",\r\n  candidateHighlights: [],\r\n  experience: \"\",\r\n  education: \"\",\r\n  certifications: \"\",\r\n  socialMedia: [\r\n    {\r\n      socialType: \"LinkedIn\",\r\n      socialLink: \"\"\r\n    },\r\n    {\r\n      socialType: \"Github\",\r\n      socialLink: \"\"\r\n    }\r\n  ]\r\n};\r\n\r\n/**\r\n *  this was just temporary until api's were working\r\n *\r\nexport const candidateInfo = {\r\n    id: 17,\r\n    person: {\r\n      id: 2,\r\n      formattedName: \"Fred Flintstone\",\r\n      givenName: \"Fred\",\r\n      middleName: \"\",\r\n      familyName: \"Flintstone\",\r\n      affix: \"\",\r\n      email1: \"fred@stone.com\",\r\n      email2: \"\",\r\n      mobilePhone: \"\",\r\n      workPhone: \"\",\r\n      addressLine1: \"\",\r\n      addressLine2: \"\",\r\n      municipality: \"Bedrock\",\r\n      region: \"\",\r\n      postalCode: \"\",\r\n      countryCode: \"\",\r\n      website: \"\"\r\n    },\r\n    objective:\r\n      \"Looking for great job working with dinosaurs with opportunities for advancement\",\r\n    executiveSummary: \"I am a big, cartoon guy\",\r\n    candidateHighlights: [\r\n      {\r\n        id: 1,\r\n        highlight: \"This is a highlight\",\r\n        skills: [{ id: 1, name: \"Powerbuilder\" }],\r\n        sequence: 2\r\n      },\r\n      {\r\n        id: 2,\r\n        highlight: \"And, here is another one\",\r\n        skills: [{ id: 2, name: \"Javascript\" }, { id: 22, name: \"PHP\" }],\r\n        sequence: 1\r\n      },\r\n      {\r\n        id: 3,\r\n        highlight: \"Well, jeez, I guess I could list a third\",\r\n        skills: [{ id: 103, name: \"Cisco\" }],\r\n        sequence: 4\r\n      },\r\n      {\r\n        id: 4,\r\n        highlight: \"now this is just getting boring\",\r\n        skills: [\r\n          { id: 1, name: \"Powerbuilder\" },\r\n          { id: 2, name: \"Javascript\" },\r\n          { id: 22, name: \"PHP\" },\r\n          { id: 44, name: \"WordPress\" }\r\n        ],\r\n        sequence: 7\r\n      },\r\n      {\r\n        id: 5,\r\n        highlight: \"Lorem ipsum dolor sit, amet consectetur adipisicing.\",\r\n        skills: [{ id: 1, name: \"Powerbuilder\" }],\r\n        sequence: 8\r\n      },\r\n      {\r\n        id: 6,\r\n        highlight: \"Lorem ipsum dolor sit amet.\",\r\n        skills: [{ id: 2, name: \"Javascript\" }, { id: 22, name: \"PHP\" }],\r\n        sequence: 9\r\n      },\r\n      {\r\n        id: 7,\r\n        highlight: \"There was an old maid from Peru, who swore that she.....\",\r\n        skills: [{ id: 103, name: \"Cisco\" }],\r\n        sequence: 11\r\n      },\r\n      {\r\n        id: 8,\r\n        highlight: \"Last one\",\r\n        skills: [\r\n          { id: 1, name: \"Powerbuilder\" },\r\n          { id: 2, name: \"Javascript\" },\r\n          { id: 22, name: \"PHP\" },\r\n          { id: 44, name: \"WordPress\" }\r\n        ],\r\n        sequence: 14\r\n      }\r\n    ],\r\n    experience: [\r\n      {\r\n        id: 2,\r\n        candidateId: 17,\r\n        company: {\r\n          id: 18,\r\n          name: \"WordPress Specialists\",\r\n          description: \"WordPress and Theme Specialists\",\r\n          municipality: \"Nashville\",\r\n          region: \"TN\",\r\n          countryCode: \"USA\"\r\n        },\r\n        startDate: \"2015-05-22\",\r\n        endDate: \"2017-02-05\",\r\n        contactPerson: {\r\n          id: 7,\r\n          formattedName: \"Billy Moyer\",\r\n          givenName: \"Billy\",\r\n          familyName: \"Moyer\",\r\n          mobilePhone: \"931-777-0987\",\r\n\t\t\t\t\tworkPhone: \"931-333-1234\",\r\n\t\t\t\t\taddressLine1: '',\r\n\t\t\t\t\taddressLine2: '', \r\n\t\t\t\t\tmunicipality: '',\r\n\t\t\t\t\tregion: '',\r\n\t\t\t\t\tpostalCode: '', \r\n\t\t\t\t\tcountryCode: '',\r\n\t\t\t\t\temail1: '',\r\n\t\t\t\t\twebsite: ''\r\n        },\r\n        payType: \"Salary\",\r\n        startPay: 47000,\r\n\t\t\t\tendpay: 52000,\r\n\t\t\t\tjobTitleId: 9,\r\n        jobTitle:  \"Junior Developer\"\r\n        summary: \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. \",\r\n        skills: [\r\n          {\r\n            id: 140,\r\n            name: \"ES6\"\r\n          },\r\n          {\r\n            id: 120,\r\n            name: \"JQuery\"\r\n          }\r\n        ],\r\n        highlights: [\r\n          {\r\n            id: 2,\r\n            highlight: \"Job highlight 1\",\r\n            skills: [{ id: 2, name: \"Javascript\" }, { id: 22, name: \"PHP\" }],\r\n            sequence: 1,\r\n            includeInSummary: true\r\n          },\r\n          {\r\n            id: 3,\r\n            highlight: \"Job Highlight 2\",\r\n            skills: [{ id: 103, name: \"Cisco\" }],\r\n            sequence: 4,\r\n            includeInSummary: false\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 7,\r\n        candidateId: 17,\r\n        company: {\r\n          id: 4,\r\n          name: \"3sixD\",\r\n          description: \"World famous Pick/React stack developent\"\r\n        },\r\n        startDate: \"2017-05-22\",\r\n        endDate: \"2018-02-05\",\r\n        contactPerson: {\r\n          id: 27,\r\n          formattedName: \"Bob Skalinsky\",\r\n          givenName: \"Bob\",\r\n          familyName: \"Skalinsky\",\r\n          workPhone: \"615-333-8888\"\r\n        },\r\n        payType: \"Salary\",\r\n        startPay: 65000,\r\n        endpay: 68000,\r\n        jobTitle: {\r\n          id: 1,\r\n          candidateId: 17,\r\n          titleDescription: \"Web Developer\"\r\n        },\r\n        summary:\r\n          \"Lorem ipsum, dolor sit amet consectetur adipisicing elit. Iusto sed corporis, maxime sint inventore facere veniam numquam error quisquam debitis blanditiis dolorem enim nam velit at, reiciendis veritatis, animi tempore.\",\r\n        skills: [\r\n          {\r\n            id: 117,\r\n            name: \"Web API\"\r\n          },\r\n          {\r\n            id: 120,\r\n            name: \"JQuery\"\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 12,\r\n        candidateId: 17,\r\n        company: {\r\n          id: 7,\r\n          name: \"Web Tech\"\r\n        },\r\n        startDate: \"2018-02-10\",\r\n        contactPerson: {\r\n          id: 20,\r\n          formattedName: \"Sue Jenkins\",\r\n          givenName: \"Sue\",\r\n          familyName: \"Jenkins\",\r\n          workPhone: \"615-444-9999\"\r\n        },\r\n        payType: \"Salary\",\r\n        startPay: 70000,\r\n        endPay: \"\",\r\n        jobTitle: {\r\n          id: 1,\r\n          candidateId: 17,\r\n          titleDescription: \"Web Developer\"\r\n        },\r\n        summary:\r\n          \"More Lorem ipsum, dolor sit amet consectetur adipisicing elit. Iusto sed corporis, maxime sint inventore facere veniam numquam error quisquam debitis blanditiis dolorem enim nam velit at, reiciendis veritatis, animi tempore.\",\r\n        skills: [\r\n          {\r\n            id: 114,\r\n            name: \"C#\"\r\n          },\r\n          {\r\n            id: 115,\r\n            name: \".Net Framework 4.0/4.5\"\r\n          }\r\n        ]\r\n      }\r\n    ],\r\n    education: [\r\n      {\r\n        id: 2,\r\n        candidateId: 17,\r\n        schoolName: \"Vanderbilt\",\r\n        schoolMunicipality: \"\",\r\n        schoolRegion: \"\",\r\n        schoolCountry: \"\",\r\n        degreeName: \"BS Computer Science\",\r\n        degreeType: \"Bachelors\",\r\n        degreeMajor: \"Computer Science\",\r\n        degreeMinor: \"\",\r\n        startDate: \"2012-08-01\",\r\n        endDate: \"2016-05-01\",\r\n        skills: [\r\n          {\r\n            id: 114,\r\n            name: \"C#\"\r\n          },\r\n          {\r\n            id: 115,\r\n            name: \".Net Framework 4.0/4.5\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n};*/\r\n","/**\r\n * dataFetch is a generic fetch function that uses async await\r\n * and will clean up the fetch routines so that all have a standard\r\n * code.  It will use try/catch for error handling.\r\n */\r\n\r\nimport { convertNullsToEmpty } from \"./library.js\";\r\n\r\nconst API_QUERY = \"?api_cc=three&api_key=fj49fk390gfk3f50\";\r\nconst API_COMPANY = \"companies\";\r\nconst API_PERSON = \"persons\";\r\n\r\nexport default async function dataFetch(\r\n\tendpoint,\r\n\tqueryStr = \"\",\r\n\thttpMethod = \"GET\",\r\n\tbody = null,\r\n\tformData = false\r\n) {\r\n\tconst urlBase = window.apiUrl;\r\n\r\n\tlet basicUrl = `${urlBase}${endpoint}${API_QUERY}${queryStr}`;\r\n\tlet headers = formData\r\n\t\t? {}\r\n\t\t: { headers: { \"Content-Type\": \"application/json\" } };\r\n\r\n\tlet httpConfig = body\r\n\t\t? {\r\n\t\t\t\tmethod: httpMethod,\r\n\t\t\t\tbody: formData ? body : JSON.stringify(body),\r\n\t\t\t\t...headers\r\n\t\t  }\r\n\t\t: {};\r\n\r\n\ttry {\r\n\t\tconst response = await fetch(basicUrl, httpConfig);\r\n\t\tlet result = await response.json();\r\n\t\tif (result.error) {\r\n\t\t\treturn result;\r\n\t\t} else {\r\n\t\t\tresult = convertNullsToEmpty(result.data);\r\n\t\t\treturn result;\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.log(\"Fetch error: \", error);\r\n\t\treturn { error: error };\r\n\t}\r\n}\r\n\r\nexport async function fetchCompany(id) {\r\n\tconst endpoint = `${API_COMPANY}/${id}`;\r\n\tconst company = await dataFetch(endpoint);\r\n\treturn company;\r\n}\r\n\r\nexport async function fetchPerson(id) {\r\n\tconst endpoint = `${API_PERSON}/${id}`;\r\n\tconst person = await dataFetch(endpoint);\r\n\treturn person;\r\n}\r\n","/* CandidateBioContainer.js */\r\nimport React, { Component } from \"react\";\r\nimport CandidateBio from \"./CandidateBio\";\r\nimport { candidateInfo } from \"components/CandidateProfile/dummyData\";\r\nimport dataFetch from \"assets/js/dataFetch\";\r\n\r\nimport \"./css/bio.css\";\r\n\r\nconst API_CANDIDATES = \"candidates\";\r\nconst API_CANDIDATE_SKILLS = \"candidate_skills/candidate_id\";\r\n\r\nconst defaultLayout = {\r\n\tsections: [\r\n\t\t{ name: \"hd\" },\r\n\t\t{ name: \"ts\" },\r\n\t\t{ name: \"hi\" },\r\n\t\t{ name: \"ex\" },\r\n\t\t{ name: \"ed\" },\r\n\t\t{ name: \"ct\" }\r\n\t]\r\n};\r\n\r\nclass CandidateBioContainer extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\t// check for candidate id being passed in as url parm\r\n\t\t// if no such parm, then must be add mode\r\n\t\t// const candId = props.match.params.candId;\r\n\t\tconst candId =\r\n\t\t\twindow.tsdData && window.tsdData.candId ? window.tsdData.candId : 7;\r\n\r\n\t\t// check query string  for layout\r\n\t\tconst urlParams = new URLSearchParams(window.location.search);\r\n\t\tconst layout = urlParams.get(\"layout\")\r\n\t\t\t? JSON.parse(urlParams.get(\"layout\"))\r\n\t\t\t: defaultLayout;\r\n\t\t// console.log(\"layout: \", layout);\r\n\r\n\t\tthis.state = {\r\n\t\t\tcandidate: candidateInfo,\r\n\t\t\ttechtagSkills: [],\r\n\t\t\tcandId,\r\n\t\t\tlayout\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// if candId exists, then pull from the api\r\n\t\tthis.state.candId !== \"undefined\" &&\r\n\t\t\tthis.loadCandidateInfo(this.state.candId) &&\r\n\t\t\tthis.loadCandidateSkills(this.state.candId);\r\n\t}\r\n\r\n\tloadCandidateInfo = async candId => {\r\n\t\tconst endpoint = `${API_CANDIDATES}/${candId}`;\r\n\t\tconst candidateApiInfo = await dataFetch(endpoint);\r\n\t\tif (candidateApiInfo.error) {\r\n\t\t\tconsole.log(candidateApiInfo);\r\n\t\t\t/**\r\n\t\t\t *\r\n\t\t\t *  TODO: add error message\r\n\t\t\t *\r\n\t\t\t */\r\n\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\tconst candidate = candidateApiInfo ? candidateApiInfo : candidateInfo;\r\n\t\t\tthis.setState({\r\n\t\t\t\tcandidate\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n\r\n\tbuildTechSkils = candidateSkillInfo => {\r\n\t\tconst techSkills = candidateSkillInfo.reduce((techArray, skill) => {\r\n\t\t\tif (!skill.resumeTechtagId) return techArray;\r\n\t\t\tconst tagId = skill.resumeTechtagId;\r\n\t\t\tif (!techArray[tagId])\r\n\t\t\t\ttechArray[tagId] = { name: skill.resumeTechtagName, skills: [] };\r\n\t\t\ttechArray[tagId].skills.push(skill.skillName);\r\n\t\t\treturn techArray;\r\n\t\t}, {});\r\n\t\treturn techSkills;\r\n\t};\r\n\r\n\tloadCandidateSkills = async candId => {\r\n\t\tconst endpoint = `${API_CANDIDATE_SKILLS}/${candId}`;\r\n\t\tconst candidateSkillInfo = await dataFetch(endpoint);\r\n\t\tif (candidateSkillInfo.error) {\r\n\t\t\tconsole.log(candidateSkillInfo);\r\n\t\t\t/**\r\n\t\t\t *\r\n\t\t\t *  TODO: add error message\r\n\t\t\t *\r\n\t\t\t */\r\n\t\t} else {\r\n\t\t\tconst techtagSkills = this.buildTechSkils(candidateSkillInfo.skills);\r\n\t\t\tthis.setState({\r\n\t\t\t\ttechtagSkills\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<CandidateBio\r\n\t\t\t\tcandidate={this.state.candidate}\r\n\t\t\t\ttechtagSkills={this.state.techtagSkills}\r\n\t\t\t\tlayout={this.state.layout}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CandidateBioContainer;\r\n","import CandidateBioContainer from \"./CandidateBioContainer\";\r\n\r\nexport default CandidateBioContainer;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./css/styles.css\";\r\nimport \"./css/app.css\";\r\n\r\nimport CandidateBioContainer from \"components/CandidateBioContainer/\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nimport {\r\n\tfaQuestion,\r\n\tfaSearch,\r\n\tfaArrowUp,\r\n\tfaArrowDown,\r\n\tfaChevronDown,\r\n\tfaEdit,\r\n\tfaPlus,\r\n\tfaCheck,\r\n\tfaArrowsAltV,\r\n\tfaCogs\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nlibrary.add(\r\n\tfaQuestion,\r\n\tfaSearch,\r\n\tfaArrowUp,\r\n\tfaArrowDown,\r\n\tfaChevronDown,\r\n\tfaEdit,\r\n\tfaPlus,\r\n\tfaCheck,\r\n\tfab,\r\n\tfaArrowsAltV,\r\n\tfaCogs\r\n);\r\n\r\n// setup global api url\r\n// if not on my dev, use remote api\r\n// const API_LOC = \"local\";\r\n// const API_LOC = \"local\";\r\nconst API_LOC = \"azure\";\r\n\r\nif (API_LOC === \"local\") {\r\n\twindow.imgLoc = \"http://localhost/3sixd/imgs/\";\r\n\twindow.apiUrl = \"http://localhost/3sixd/api/\";\r\n} else {\r\n\twindow.imgLoc = \"http://13.90.143.153/3sixd/imgs/\";\r\n\twindow.apiUrl = \"http://13.90.143.153/3sixd/api/\";\r\n}\r\n\r\n//window.resumeUrl = \"http://localhost/3sixd/resume-build/resume-pdf.php\";\r\nwindow.resumeUrl = \"http://13.90.143.153/3sixd/resume-build/resume-pdf.php\";\r\n\r\nclass App extends Component {\r\n\t// constructor(props) {\r\n\t// \tsuper(props);\r\n\t// const storedUser = sessionStorage.getItem(\"user\");\r\n\t// const userInfo = storedUser ? JSON.parse(storedUser) : false;\r\n\t// this.state = {\r\n\t// \tuserInfo\r\n\t// };\r\n\t// }\r\n\r\n\t// handleLogin = (resp, loc = \"/\", push = true) => {\r\n\t// \tloc = loc === null ? \"/\" : loc;\r\n\t// \t// add to session storage\r\n\t// \tsessionStorage.setItem(\"user\", JSON.stringify(resp));\r\n\t// \tthis.setState(\r\n\t// \t\t{\r\n\t// \t\t\tuserInfo: resp\r\n\t// \t\t\t// id, fullName, email, confirmFlag, securityLevel, candidateId\r\n\t// \t\t},\r\n\t// \t\t() => push && this.props.history.push(loc)\r\n\t// \t);\r\n\t// };\r\n\r\n\t// handleLogout = (loc = \"/\") => {\r\n\t// \t// add to session storage\r\n\t// \tsessionStorage.setItem(\"user\", false);\r\n\t// \tthis.setState(\r\n\t// \t\t{\r\n\t// \t\t\tuserInfo: false\r\n\t// \t\t\t// id, fullName, email, confirmFlag, securityLevel, candidateId\r\n\t// \t\t},\r\n\t// \t\t() => {\r\n\t// \t\t\tsessionStorage.removeItem(\"referrer\");\r\n\t// \t\t\t//this.props.history.push(loc);\r\n\t// \t\t}\r\n\t// \t);\r\n\t// };\r\n\r\n\trender() {\r\n\t\t// const authValue = {\r\n\t\t// \tuserInfo: this.state.userInfo,\r\n\t\t// \thandleLogin: this.handleLogin,\r\n\t\t// \thandleLogout: this.handleLogout\r\n\t\t// };\r\n\t\treturn (\r\n\t\t\t<div className=\"app\">\r\n\t\t\t\t<main id=\"body\">\r\n\t\t\t\t\t<CandidateBioContainer />\r\n\t\t\t\t</main>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst target = document.getElementById(\"tsd-react-root\");\r\nif (target) ReactDOM.render(<App />, target);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\nif (module.hot) {\r\n\t// module.hot.accept();\r\n}\r\n"],"sourceRoot":""}